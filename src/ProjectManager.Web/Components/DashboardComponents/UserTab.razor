<div class="flex">
    <h4>Profile</h4>
    <div class="dropdown float">
        <span id="logout-btn" class="fa-solid fa-arrow-right-from-bracket" @onclick="Logout"/>
    </div>
</div>
@if (User != null)
{
    <div class="user-label">
        <div class="user-avatar-container">
            @if (isAvatarExist && !justUploaded)
            {
                var path = $"/avatars/pm-avatar-{User.Id}.jpg?r={DateTime.Now.Ticks}";
                <img src="@path" class="user-avatar"/>
            }
            else if (justUploaded)
            {
                var path = "";
                path = $"/avatars/pm-avatar-temp.jpg?r={DateTime.Now.Ticks}";
                <img src="@path" class="user-avatar"/>
            }
            else
            {
                <span class="fa-solid fa-circle-user user-icon"/>
            }
            @if (isSettingsOn)
            {
                <span class="fa-solid fa-camera-rotate edit-avatar">
                    <BlazorInputFile.InputFile class="custom-file-input" OnChange="HandleImageUpload" />
                </span>
            }
        </div>
        <h6 class="mt-3 ms-4">@User.Firstname @User.Lastname
            @if (isAvatarExist)
            {
                <i class="fa-solid fa-check verified"/>
            }
        </h6>
        <h6 class="user-type">@User.Role</h6>
        <div style="display: flex; justify-content: center;">
        @if (!isSettingsOn && !isNotificationsOn && !isConversationsOn)
        {
            <div class="icon-container" @onclick="ShowUserSettings">
                <i id="edit-profile-btn" class="fa-regular fa-pen-to-square"/>
            </div>
            <div class="icon-container" @onclick="ShowConversations">
                <i id="messages-btn" class="fa-regular fa-envelope"/>
                @if (messages != null)
                {
                    @if (messages.Where(x => !x.IsSeen).Count() > 0) // not working with above if condition
                    {
                         <div class="circle-span">@messages.Where(x => !x.IsSeen).Count()</div>
                    }
                }
            </div>
            <div class="icon-container" @onclick="ShowNotifications">
                <i id="notifications-btn" class="fa-regular fa-bell"/>
                @if (notifications != null && notifications.Where(x => !x.IsSeen).Count() > 0)
                {
                    <div class="circle-span">@notifications.Where(x => !x.IsSeen).Count()</div>
                }
            </div>
        }
        </div>
        @if (isSettingsOn) 
        {
            <div class="mb-5">
                <i class="fa-solid fa-chevron-up save-button mb-3" @onclick="ShowUserSettings" />
            </div>
            <div class="fields-container">
                <EditForm Model="@userModel" OnValidSubmit="UpdateUser">
                    @if (User.Role != 0)
                    {
                        <label class="form-label">Specialization</label>
                        <InputSelect class="form-control shadow-none pm-modal-input mb-3" @bind-Value="@userModel.Specialization">
                            <option value="0">Backend</option>
                            <option value="1">Frontend</option>
                            <option value="2">Fullstack</option>
                            <option value="3">DevOps</option>
                            <option value="4">Tester</option>
                            <option value="5">None</option>
                        </InputSelect>
                    }
                    <label class="form-label">E-mail address</label>
                    <InputText id="edit-email-input" class="form-control pm-modal-input shadow-none mb-3" @bind-Value="userModel.Email" placeholder="E-mail" />
                    <label class="form-label">Password</label>
                    <InputText id="edit-password-input" type="password" class="form-control pm-modal-input shadow-none mb-2" @bind-Value="userModel.Password" placeholder="Password" />
                    <InputText id="edit-password-confirm" type="password" class="form-control pm-modal-input shadow-none mb-3" @bind-Value="userModel.PasswordToConfirm" placeholder="Confirm password" />
                    <button id="edit-save-btn" type="submit" class="pm-modal-btn submit-btn">Save</button>
                </EditForm>
            </div>
        }
    </div>
}